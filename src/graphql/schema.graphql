enum Categories {
  Electronics
  Home
  Clothing
  Toys
  Books
  Sports
  Tools
  Other
}

type Item {
  id: ID!
  listing_title: String!
  listing_description: String!
  listing_price: Float!
  listing_image: String!
  listing_category: Categories!
  listing_quantity: Int!
}

type User {
  id: ID!
  name: String!
}

type Token {
  token: String!
}

type ShippingAddress {
  address: String!
  city: String!
  postalCode: String!
  country: String!
}

type PaymentResult {
  id: String!
  paymentStatus: String!
  paymentTime: String!
}

type Order {
  id: ID!
  user: String!
  orderItems: [Item!]!
  shippingAddress: ShippingAddress!
  paymentMethod: String!
  paymentResult: PaymentResult!
  totalPrice: Float!
}

"""
Queries
"""
type Query {
  allItems: [Item!]
  allOrders: [Order!]
  getAllOrdersByUser: [Order!]
  getItem(id: ID!): Item
  getUser(id: ID!): User
  getOrder(id: ID!): Order
  me: User
}

"""
Input types for mutations
"""
input ItemInput {
  id: ID!
}

input ShippingAddressInput {
  address: String!
  city: String!
  postalCode: String!
  country: String!
}

input PaymentResultInput {
  id: String!
  paymentStatus: String!
  paymentTime: String!
}

input OrderItemInput {
  item: ID!
  quantity: Int!
}

type Mutation {
  addItem(
    listing_title: String!
    listing_description: String!
    listing_price: Float!
    listing_image: String!
    listing_category: Categories!
    listing_quantity: Int!
  ): Item!

  deleteItem(id: ID!): Item!

  addOrder(
    user: String!
    orderItems: [OrderItemInput!]!
    shippingAddress: ShippingAddressInput!
    paymentMethod: String!
    paymentResult: PaymentResultInput!
    totalPrice: Float!
  ): ID!

  createUser(name: String!, password: String!): User!

  login(name: String!, password: String!): Token!

  addUser(name: String!, password: String!): User!

  deleteUser(id: ID!): User!
}
